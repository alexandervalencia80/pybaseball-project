from pybaseball import statcast
import pandas
import math
import csv
from functools import reduce

list_months = ['03','04','05','06','07','08','09','10','11','12']
list_years = ['17','18','19']

list_dfs = []

for year in list_years:
    for month in list_months[0:-1]:
        start = '20' + year + '-' + month + '-01'
        end = '20' + year + '-' + list_months[list_months.index(month) + 1] + '-01'
        data = statcast(start_dt = start, end_dt = end)
        list_dfs.append(data)

finalDf = pandas.concat(list_dfs)
finalDf = finalDf.drop_duplicates()
finalDf.to_csv('pybaseballCSV.csv')
print ("pull statcast done")

pitchStatcast = pandas.read_csv("pybaseballCSV.csv")
pitchStatcast = pitchStatcast[['game_date','pitch_type','release_speed','pfx_x','pfx_z','plate_x','plate_z','release_spin_rate','description','launch_speed','launch_speed_angle']]
pitchFailureDesc = ['ball','hit_by_pitch']
pitchStatcast.to_csv('pybaseballCSVExpanded.csv')
print ("expanded data done")
successfulPitchStatcast = pitchStatcast[~pitchStatcast['description'].str.contains('|'.join(pitchFailureDesc))]
successfulPitchStatcast = successfulPitchStatcast[(successfulPitchStatcast['launch_speed_angle'] < 5) | successfulPitchStatcast.launch_speed_angle.isnull()]
successfulPitchStatcast = successfulPitchStatcast[(successfulPitchStatcast['launch_speed'] > 10) | successfulPitchStatcast.launch_speed.isnull()]
successfulPitchStatcast = successfulPitchStatcast[successfulPitchStatcast['release_speed'] > 75]                                                   
successfulPitchStatcast.to_csv('pybaseballCSVSuccessful.csv')
print ("successful data done")
unSuccessfulPitchDesc = pitchStatcast[pitchStatcast['description'].str.contains('|'.join(pitchFailureDesc))]
unSuccessfulLSA = pitchStatcast[pitchStatcast['launch_speed_angle'] > 4]
unSuccessfulSpeed = pitchStatcast[pitchStatcast['launch_speed'] > 10]
unSuccessfulRS = pitchStatcast[pitchStatcast['release_speed'] < 75]
unSuccessfulPitchStatcast = unSuccessfulPitchDesc.append([unSuccessfulLSA,unSuccessfulSpeed,unSuccessfulRS])
unSuccessfulPitchStatcast.to_csv('pybaseballCSVUnsuccessful.csv')
print ("unsuccessful data done")
